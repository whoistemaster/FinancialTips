@inject HttpClient _client

<EditForm Model="@tip" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Blog: </label>
            <div>
                <InputSelect @bind-Value="tip.BlogId" class="form-control">
                    <option value=" ">-- Select Blog -- </option>
                    @if (Blogs != null)
                    {
                        foreach (var blog in Blogs)
                        {
                            <option value="@blog.Id">@blog.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => tip.BlogId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Chart: </label>
            <div>
                <InputSelect @bind-Value="tip.ChartId" class="form-control">
                    <option value=" ">-- Select Chart -- </option>
                    @if (Charts != null)
                    {
                        foreach (var chart in Charts)
                        {
                            <option value="@chart.Id">@chart.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => tip.ChartId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Community: </label>
            <div>
                <InputSelect @bind-Value="tip.CommunityId" class="form-control">
                    <option value=" ">-- Select Community -- </option>
                    @if (Communitys != null)
                    {
                        foreach (var community in Communitys)
                        {
                            <option value="@community.Id">@community.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => tip.CommunityId)" />
            </div>
        </div>

        <div class="form-group">
            <label>FinancialPlanning: </label>
            <div>
                <InputSelect @bind-Value="tip.FinancialPlanningId" class="form-control">
                    <option value=" ">-- Select FinancialPlanning -- </option>
                    @if (FinancialPlannings != null)
                    {
                        foreach (var financialplanning in FinancialPlannings)
                        {
                            <option value="@financialplanning.Id">@financialplanning.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => tip.FinancialPlanningId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Insight: </label>
            <div>
                <InputSelect @bind-Value="tip.InsightId" class="form-control">
                    <option value=" ">-- Select Insight -- </option>
                    @if (Insights != null)
                    {
                        foreach (var insight in Insights)
                        {
                            <option value="@insight.Id">@insight.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => tip.InsightId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Year: </label>
            <div>
                <InputNumber @bind-Value="@tip.Year" class="form-control" />
                <ValidationMessage For="@(() => tip.Year)" />
            </div>
        </div>

        <div class="form-group">
            <label>Daily Rate: </label>
            <div>
                <InputNumber @bind-Value="@tip.RentalRate" class="form-control" />
                <ValidationMessage For="@(() => tip.RentalRate)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <FinancialTips.Client.Components.BackToList Target="Tips" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Tip tip { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Blog> Blogs;
    private IList<Chart> Charts;
    private IList<Community> Communitys;
    private IList<FinancialPlanning> FinancialPlannings;
    private IList<Insight> Insights;

    protected async override Task OnInitializedAsync()
    {
        Blogs = await _client.GetFromJsonAsync<List<Blog>>($"{Endpoints.BlogsEndpoint}");
        Charts = await _client.GetFromJsonAsync<List<Chart>>($"{Endpoints.ChartsEndpoint}");
        Communitys = await _client.GetFromJsonAsync<List<Community>>($"{Endpoints.CommunitysEndpoint}");
        FinancialPlannings = await _client.GetFromJsonAsync<List<FinancialPlanning>>($"{Endpoints.FinancialPlanningsEndpoint}");
        Insights = await _client.GetFromJsonAsync<List<Insight>>($"{Endpoints.InsightsEndpoint}");
    }
}
