@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3>Create New Customer</h3>
<hr />
<br />
<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="form-group">
        <label>FirstName: </label>
        <div>
            <InputText @bind-Value="@customer.FirstName" class="form-control" />
            <ValidationMessage For="@(() => customer.FirstName)" />
        </div>
    </div>

    <div class="form-group">
        <label>LastName: </label>
        <div>
            <InputText @bind-Value="@customer.LastName" class="form-control" />
            <ValidationMessage For="@(() => customer.LastName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email Address: </label>
        <div>
            <InputText @bind-Value="@customer.EmailAddress" class="form-control" />
            <ValidationMessage For="@(() => customer.EmailAddress)" />
        </div>
    </div>

    <div class="form-group">
        <label>Gender: </label>
        <div>
            <InputText @bind-Value="@customer.Gender" class="form-control" />
            <ValidationMessage For="@(() => customer.Gender)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact: </label>
        <div>
            <InputText @bind-Value="@customer.Contact" class="form-control" />
            <ValidationMessage For="@(() => customer.Contact)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Customer
    </button>
</EditForm>


@code {
    Customer customer = new Customer();

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
        _navManager.NavigateTo("/customers/");
    }

}
