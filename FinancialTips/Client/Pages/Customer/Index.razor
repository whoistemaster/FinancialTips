@page  "/customer/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title"> Car Customers</h3>
@if (Customers == null)
{
    <div class="alert alert-info">Loading Customers...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Driving License</th>
                <th>Contact Number</th>
                <th>Email Address</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
            <tr>
                <td>@customer.Name</td>
                <td>@customer.Gender</td>
                <td>@customer.Contact</td>
                <td>@customer.EmailAddress</td>
                <button class="btn btn-danger" @onclick="@(()=>Delete(customer.Id))">
                    <span class="oi oi-delete"></span>
                </button>

            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    async Task Delete(int customerId)
    {
        var customer = Customers.First(q => q.Id == customerId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete{customer.Id}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.CustomersEndpoint}");
            await OnInitializedAsync();
        }
    }
}
